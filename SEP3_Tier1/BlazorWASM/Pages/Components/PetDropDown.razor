@using Domain.Models
@using HttpClients.ClientInterfaces
@using Newtonsoft.Json


<RadzenDropDown 
    @bind-Value=@Value TValue="Pet"
    Placeholder="@(Pets == null || Pets.Any() ? $"Choose" : "Empty")" 
    Data="@Pets" TextProperty="PetName" 
    Change="() => Console.WriteLine(Value?.PetName)"/>


@code {
    public IEnumerable<Pet>? Pets { get; set; } = new List<Pet>();
    [Inject]
    public IUserService UserService { get; set; }
    
    [Parameter]
    public string OwnerEmail{ get; set; }
    
    public Pet? Value { get; set; } = new Pet();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Pets = await UserService.GetPetsOfUser(OwnerEmail);
            Console.WriteLine(JsonConvert.SerializeObject(Pets));
            int i = 0;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            if (Pets == null || !Pets.Any())
            {
                Value = null;
            }
        }
    }
}