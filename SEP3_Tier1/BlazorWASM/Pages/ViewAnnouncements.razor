@page "/ViewAnnouncements"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@using Domain.Models
@inject IAnnouncementService AnnouncementService

<div style="width: 100%" class="d-flex flex-row">
    <div class="search-container">
        <RadzenTextBox Placeholder="Search..." id="searchInput" class="w-100"/>
        <span class="oi oi-magnifying-glass" id="searchIcon" @onclick="Search"></span>
    </div>
    
    @* OBVIOSLY this dropdown requires the previous version of PetType (beeing enum) *@
    @* <RadzenDropDown *@
    @*     @bind-Value=@petType *@
    @*     Data=@Enum.GetNames(typeof(PetType)) *@
    @*     AllowClear=true *@
    @*     Multiple=true *@
    @*     Placeholder="Select pet types" *@
    @*     Chips=true *@
    @*     SelectAllText="Select all types" *@
    @*     Style="width: 40%; max-width: 400px;" *@
    @*     @onchange="OnDropDownChange" *@
    @*     @onclick="OnDropDownChange"/> *@
    
    <div class="dropdown">
        <RadzenButton Style="margin-left: 8px">Apply filters</RadzenButton>
        <div class="dropdown-content">
              <RadzenDropDown
                          @bind-Value=filteredPetTypes
                          Data="PetType.PetTypesWithNames"
                          Multiple=true
                          Placeholder="Select pet types"
                          TextProperty="Name"
                          Chips="true"
                          ValueProperty="Value"
                          SelectAllText="Select all types"
                          Style="width: 100%; max-width: 400px;" />
        
              <RadzenCheckBox Style="margin-top: 8px" Name="CheckBox1" @bind-Value=@isVaccinatedFilter/>
              <RadzenLabel Text="Vaccinated" Component="CheckBox1" Style="margin-left: 8px; vertical-align: middle;" />
        </div>
    </div>
    
</div>

<div class="d-flex flex-row">
    <div class="sidebar filter-area">
    </div>
    <div class="content">
        @if (announcements == null)
        {
            <label>Loading...</label>
        }
        else
        {
            @foreach (var announcement in announcements!)
            {
                <AnnouncementComponent Announcement="announcement"/>
            }
        }
    </div>
</div>

<div class="d-flex flex-wrap flex-row">
    @for (int i = 1; i < 6; i++)
    {
        <div class="card d-flex flex-row container-fluid row">
            <div class="column">
                  <div class="rounded-image">
                      <img src="https://www.petspyjamas.com/uploads/2020/04/shutterstock_189642425-690x460.jpg"/>
                  </div>
            </div>
            <div class="column">
                <div style="padding: 10px">
                    <h3>Announcement @i</h3>
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
                </div>
                <RadzenButton Style="margin-top: 2rem">Create announcement</RadzenButton>
                @* <MdButton style="--md-elevated-button-container-color: var(--primary-color); --md-elevated-button-label-text-color: #000000">Request service</MdButton> *@
            </div>
        </div>
    }
</div>


@code {
    private List<Announcement>? announcements;

    protected override async Task OnInitializedAsync()
    {
        announcements = (await AnnouncementService.GetAsync(new SearchAnnouncementDto())).ToList();
    }

    // DROPDOWN
    public List<String> petType = new List<String>(); // прийдется список стрингов превратить в энам
    //зачем если в этом списке хранятся только уже выбранные элементы. Они уже выбраны из энама, и обратно в энам их конвертировать не нужно
    private List<PetType.Type> filteredPetTypes = new();
    private bool isVaccinatedFilter;
    // или же оставить так и тогда напрямую отдавать список в SearchAnnouncemntDto,
    // ведь теперь для использования энама, нужно всего навсего указать Text & ValueProperties
    // + в случае если энам состоить из двух слов то его строчный вид будет типа такой БляПиздец
    // а я сделал, чтобы было так: Бля пиздец
    //
    //я видел ты это сделал какимто ЖУТКО сложнвм стринг джоином, и он кажется не работает
    
    public void Search()
    {
        Console.WriteLine("pressed");   
        Console.WriteLine(petType.Count);   
    }
    
    public void OnDropDownChange()
    {
        Console.WriteLine(petType);   
        Console.WriteLine("petType");   
    }
}